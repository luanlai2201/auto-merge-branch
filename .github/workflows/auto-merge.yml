name: Auto Merge to Develop

on:
  push:
    branches:
      - main

env:
  DEVELOP_BRANCH: develop

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # - name: Return error
      #   run: |
      #     echo "Error: Merge conflict detected"
      #     exit 1

      - name: Merge main into develop
        run: |
          git checkout $DEVELOP_BRANCH
          if ! git merge main --no-edit; then
            echo "Error: Merge conflict detected"
            exit 1
          fi
          git push origin $DEVELOP_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Reset to nearest commit of develop and checkout to main
        if: failure()
        run: |
          git reset --hard origin/$DEVELOP_BRANCH
          git checkout main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        if: failure()
        run: |

          # Define file path for PR template
          PR_TEMPLATE_PATH=".github/PULL_REQUEST_TEMPLATE.md"

          # Check if the file exists
          if [ -f "$PR_TEMPLATE_PATH" ]; then
            echo "Reading the PR template from $PR_TEMPLATE_PATH"
            PR_BODY=$(cat $PR_TEMPLATE_PATH) # Read the content of the template
          else
            echo "PR template not found, using a default PR body"
            PR_BODY="This is a default PR body because no template was found."
          fi
          # Data for the PR creation
          PR_TITLE="Auto PR: Update from GitHub Actions"
          BRANCH_NAME="main"
          BASE_BRANCH=$DEVELOP_BRANCH

          # Make the API request
          curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/pulls \
          -d "{\"title\":\"$PR_TITLE\", \"body\":\"$PR_BODY\", \"head\":\"$BRANCH_NAME\", \"base\":\"$BASE_BRANCH\"}"
